{"version":3,"sources":["components/HomePage.js","components/PathFindingAlgo/Cell.js","components/PathFindingAlgo/Algorithms/BFS.js","components/Hooks/useOption.js","components/Dropdown.js","components/Navbar.js","components/PathFindingAlgo/PathFindingAlgo.js","App.js","index.js"],"names":["HomePage","className","style","height","to","Cell","classToAdd","row","col","isStartingPoint","isFinishPoint","handleMouseDown","handleMouseEnter","handleMouseOver","handleMouseLeave","handleMouseUp","id","border","onMouseDown","onMouseEnter","onMouseOver","onMouseLeave","onMouseUp","obComp","ob1","ob2","x","y","d","isSafe","getPath","grid","src","dest","path","from","push","BFS","start","end","a","q","visited","length","shift","dir","newDir","isPathFound","nodesVisited","safeToVisit","useOption","initialValue","useState","selected","setSelected","e","target","value","Dropdown","currentValue","setCurrentValue","onChange","Navbar","visualizeAlgorithm","clearBoard","width","display","justifyContent","onClick","PathFindingAlgo","currentAlgo","setCurrentAlgo","setGrid","source","setSource","setDest","mousePressed","setMousePressed","changingStartPosition","setChangingStartPosition","changingEndPosition","setChangingEndPosition","useEffect","getGrid","GRID","i","j","r","c","document","getElementById","newGrid","classList","contains","pop","String","setTimeout","map","key","cell","App","exact","component","TestColoring","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0bff2138.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <h1 className='text-white'>WELCOME TO ALGO-VIZ</h1>\r\n            <p className='font-size-22'>Visulize core algorithms used in all over the programming world.</p>\r\n            <Link className='btn btn-success btn-lg' to='/path-finding-visualization'>Path Finding visualization</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport './Cell.css'\r\n\r\nfunction Cell({ row, col, isStartingPoint, isFinishPoint, handleMouseDown, handleMouseEnter, handleMouseOver, handleMouseLeave, handleMouseUp }) {\r\n    let classToAdd;\r\n\r\n    if(isStartingPoint) classToAdd = 'node node-start'\r\n    else if(isFinishPoint) classToAdd = 'node node-finish'\r\n    else classToAdd = 'node node-unvisited'\r\n    \r\n    return (\r\n        <td\r\n            id={`node-${row}-${col}`}\r\n            className={classToAdd}\r\n            style={{ border: '1px solid black' }}\r\n            onMouseDown={() => handleMouseDown(row, col)}\r\n            onMouseEnter={() => handleMouseEnter(row, col)}\r\n            onMouseOver={() => handleMouseOver(row, col)}\r\n            onMouseLeave={() => handleMouseLeave(row, col)}\r\n            onMouseUp={() => handleMouseUp(row, col)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Cell","const obComp = (ob1, ob2) => ob1.x === ob2.x && ob2.y === ob1.y\r\nconst d = [ { x: -1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 0 }, { x: 0, y: -1 } ]\r\nconst isSafe = ({x, y}) => x >=0 && x < 20 && y >= 0 && y < 60\r\n\r\nconst BFS = (grid, start, end) => {\r\n    let a = []\r\n    // let path = []\r\n    let q = [start]\r\n    grid[start.x][start.y].visited = true\r\n\r\n    while(q.length) {\r\n        const src = q.shift()\r\n\r\n        for(const dir of d) {\r\n            const newDir = { x: src.x+dir.x, y: src.y+dir.y }\r\n            if(obComp(newDir, end)) {\r\n                grid[end.x][end.y].from = src;\r\n                return { isPathFound: true, nodesVisited: a, path: getPath(grid, start, end) }\r\n            }\r\n            if(isSafe(newDir) && !grid[newDir.x][newDir.y].visited && grid[newDir.x][newDir.y].safeToVisit) {\r\n                a.push(newDir)\r\n                q.push(newDir)\r\n                grid[newDir.x][newDir.y].from = src\r\n                grid[newDir.x][newDir.y].visited = true\r\n            }\r\n        }\r\n    }\r\n\r\n    return { isPathFound: false, nodesVisited: a, path: [] }\r\n}\r\n\r\nconst getPath = (grid, src, dest) => {\r\n    let path = []\r\n\r\n    while(!obComp(grid[dest.x][dest.y].from, {x: -1, y: -1})) {\r\n        path.push(grid[dest.x][dest.y].from);\r\n        dest = grid[dest.x][dest.y].from;\r\n    }\r\n\r\n    return path;\r\n}\r\n\r\n\r\nexport default BFS","import { useState } from 'react'\r\n\r\nconst useOption = initialValue => {\r\n    const [ selected, setSelected ] = useState(initialValue || '')\r\n\r\n    const changeSelected = e => {\r\n        setSelected(e.target.value);\r\n    }\r\n\r\n    return [ selected, changeSelected ]\r\n}\r\n\r\nexport default useOption","import React from 'react'\r\n\r\nfunction Dropdown({ currentValue, setCurrentValue }) {\r\n    return (\r\n        <div className='d-flex align-items-center'>\r\n            <span className='text-nowrap mr-10'>Select Algorithm:</span>\r\n            <select className='form-control' value={currentValue} onChange={setCurrentValue}>\r\n                <option value='A* Algorithm'>A* Algorithm</option>\r\n                <option value=\"Dijktra's Algorithm\">Dijktra's Algorithm</option>\r\n                <option value='Greedy Method'>Greedy Method</option>\r\n                <option value='Breadth First Search'>Breadth First Search</option>\r\n                <option value='Depth First Search'>Depth First Search</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Dropdown from './Dropdown'\r\n\r\nfunction Navbar({ currentValue, setCurrentValue, visualizeAlgorithm, clearBoard }) {\r\n    return (\r\n        <nav className='navbar'>\r\n            <NavLink className='navbar-brand text-nowrap' to='/'>Path Finding Visualization</NavLink>\r\n            <div style={{\r\n                width: '80%',\r\n                display: 'flex',\r\n                justifyContent: 'space-evenly'\r\n            }}>\r\n                <Dropdown currentValue={currentValue} setCurrentValue={setCurrentValue} />\r\n                <button className='btn btn-primary btn-lg' onClick={visualizeAlgorithm}>Visualize {currentValue}</button>\r\n                <button className='btn btn-success' onClick={clearBoard}>Clear Board</button>\r\n                <button className='btn btn-secondary'>Create Maze</button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect } from 'react'\r\nimport Cell from './Cell'\r\nimport BFS from './Algorithms/BFS';\r\nimport useOption from '../Hooks/useOption';\r\nimport Navbar from '../Navbar';\r\n\r\nconst M = 20\r\nconst N = 60\r\n\r\nconst PathFindingAlgo = () => {\r\n    const [currentAlgo, setCurrentAlgo] = useOption('Breadth First Search')\r\n    const [grid, setGrid] = useState([])\r\n    const [source, setSource] = useState({ x: 9, y: 5 })\r\n    const [dest, setDest] = useState({ x: 9, y: 45 })\r\n    const [mousePressed, setMousePressed] = useState(false)\r\n    const [changingStartPosition, setChangingStartPosition] = useState(false);\r\n    const [changingEndPosition, setChangingEndPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setGrid(getGrid())\r\n    }, [])\r\n    \r\n    const getGrid = () => {\r\n        let GRID = []\r\n            \r\n        for(let i=0; i<M; i++) {\r\n            let row = []\r\n            for(let j=0; j<N; j++) {\r\n                row.push({\r\n                    row: i,\r\n                    col: j,\r\n                    visited: false,\r\n                    isStartingPoint: false,\r\n                    isFinishPoint: false,\r\n                    safeToVisit: true,\r\n                    from: {x: -1, y: -1},\r\n                })\r\n            }\r\n            GRID.push(row)\r\n        }\r\n    \r\n        GRID[9][5].isStartingPoint = true\r\n        GRID[9][45].isFinishPoint = true\r\n\r\n        return GRID\r\n    }\r\n\r\n    const clearBoard = () => {\r\n        let newGrid = [...getGrid()]\r\n        newGrid[9][5].isStartingPoint = false;\r\n        newGrid[9][45].isFinishPoint = false;\r\n        newGrid[source.x][source.y].isStartingPoint = true;\r\n        newGrid[dest.x][dest.y].isFinishPoint = true\r\n        setGrid(newGrid)\r\n\r\n        for(let i=0; i<M; i++) {\r\n            for(let j=0; j<N; j++) {\r\n                if(i === source.x && j === source.y) document.getElementById(`node-${i}-${j}`).className = 'node node-start'\r\n                else if(i === dest.x && j === dest.y) document.getElementById(`node-${i}-${j}`).className = 'node node-finish'\r\n                else document.getElementById(`node-${i}-${j}`).className = 'node node-unvisited'\r\n            }\r\n        }\r\n    }\r\n\r\n    const visualizeAlgorithm = () => {\r\n        const { nodesVisited, path } = BFS(grid, source, dest)\r\n        path.pop()\r\n\r\n        for(const i in nodesVisited) {\r\n            if(i === String(nodesVisited.length-1) && path.length) {\r\n                setTimeout(() => {\r\n                    for(const j in path) {\r\n                        setTimeout(() => {\r\n                            document.getElementById(`node-${path[j].x}-${path[j].y}`).className = 'node node-backtrack'\r\n                        }, j * 50);\r\n                    }\r\n                }, i * 5);\r\n            } else {\r\n                setTimeout(() => {\r\n                    document.getElementById(`node-${nodesVisited[i].x}-${nodesVisited[i].y}`).className = 'node node-visited'\r\n                }, i * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMouseDown = (r, c) => {\r\n        if(!changingStartPosition && r === source.x && c === source.y) {\r\n            setChangingStartPosition(true);\r\n        } else if(!changingEndPosition && r === dest.x && c === dest.y) {\r\n            setChangingEndPosition(true);\r\n        } else {\r\n            setMousePressed(true);\r\n        }\r\n    }\r\n\r\n    const handleMouseEnter = (r, c) => {\r\n        if(changingStartPosition) {\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-could-be-start-cell'\r\n        } else if(changingEndPosition) {\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-could-be-end-cell'\r\n        }\r\n    }\r\n\r\n    const handleMouseOver = (r, c) => {\r\n        if(mousePressed) {\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-unsafe'\r\n        }\r\n    }\r\n\r\n    const handleMouseLeave = (r, c) => {\r\n        if(changingStartPosition || changingEndPosition) {\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-unvisited'\r\n        }\r\n    }\r\n\r\n    const handleMouseUp = (r, c) => {\r\n        let newGrid = [...grid];\r\n\r\n        if(changingStartPosition) {\r\n            newGrid[source.x][source.y].isStartingPoint = false;\r\n            newGrid[r][c].isStartingPoint = true;\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-start'\r\n            setSource({x: r, y: c});\r\n            setChangingStartPosition(false);\r\n        } else if(changingEndPosition) {\r\n            newGrid[dest.x][dest.y].isFinishPoint = false;\r\n            newGrid[r][c].isFinishPoint = true;\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-finish'\r\n            setDest({x: r, y: c});\r\n            setChangingEndPosition(false);\r\n        } else {\r\n            for(let i=0; i<newGrid.length; i++) {\r\n                for(let j=0; j<newGrid[0].length; j++) {\r\n                    if((document.getElementById(`node-${i}-${j}`).classList).contains('node-unsafe')) {\r\n                        newGrid[i][j].safeToVisit = false;\r\n                    }\r\n                }\r\n            }\r\n            setMousePressed(false);\r\n        }\r\n        setGrid(newGrid);\r\n    }\r\n\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <Navbar\r\n                currentValue={currentAlgo}\r\n                setCurrentValue={setCurrentAlgo}\r\n                visualizeAlgorithm={visualizeAlgorithm}\r\n                clearBoard={clearBoard}\r\n            />\r\n            <table>\r\n                <tbody>\r\n                    {grid.map((row, i) => \r\n                    <tr key={i}>\r\n                        {row.map((cell, j) => <Cell\r\n                            key={`${i}-${j}`}\r\n                            handleMouseDown={handleMouseDown}\r\n                            handleMouseEnter={handleMouseEnter}\r\n                            handleMouseOver={handleMouseOver}\r\n                            handleMouseLeave={handleMouseLeave}\r\n                            handleMouseUp={handleMouseUp}\r\n                            {...cell} \r\n                        />)}\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathFindingAlgo","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport TestColoring from './components/PathFindingAlgo/PathFindingAlgo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/path-finding-visualization' component={TestColoring} />\n    </Switch>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}