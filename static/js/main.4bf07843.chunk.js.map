{"version":3,"sources":["components/HomePage.js","components/Graph/Cell.js","components/Graph/Grid.js","components/Graph/Graph.js","components/Test/BFS.js","components/Test/TestCell.js","components/Test/Test.js","components/TestColoring/Cell.js","components/TestColoring/TestColoring.js","App.js","index.js"],"names":["HomePage","className","style","height","to","Cell","src","dest","Grid","board","i","row","j","currentCell","push","map","cell","Graph","BFS","grid","x","y","ob1","ob2","d","col","q","visited","length","pop","newDir","safeToVisit","TestCell","ClassName","isStartingPoint","isFinishPoint","border","id","Test","useState","setGrid","useEffect","ROWS","COLS","ob","from","getGrid","key","onClick","console","log","classToAdd","toggleCell","TestColoring","SRC","DEST","obComp","GRID","getPath","path","fromCell","r","c","newGrid","document","getElementById","a","shift","forEach","dir","isSafe","setTimeout","handleChangeAdjacentColor","App","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4bf07843.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <h1 className='text-white'>WELCOME TO ALGO-VIZ</h1>\r\n            <p className='font-size-22'>Visulize core algorithms used in all over the programming world.</p>\r\n            <Link className='btn btn-success btn-lg' to='/graphs'>Go To Graphs Page!</Link>\r\n            <Link className='btn btn-success btn-lg' to='/test'>Test First!</Link>\r\n            <Link className='btn btn-success btn-lg' to='/test-coloring'>Color it!</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport './Cell.css'\r\n\r\nconst Cell = ({ src, dest }) => {\r\n    return (\r\n        <>\r\n            {src && <td className={`bg-primary grid-cell`}></td>}\r\n            {!src && !dest && <td className={`bg-secondary grid-cell`}></td>}\r\n            {dest && <td className={`bg-success grid-cell`}></td>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cell","import React from 'react'\r\nimport Cell from './Cell'\r\n\r\nfunction Grid() {\r\n    const row_size = 20\r\n    const col_size = 55\r\n\r\n    let board = []\r\n    for(let i=0; i<row_size; i++) {\r\n        let row = []\r\n        for(let j=0; j<col_size; j++) {\r\n            const currentCell = {\r\n                i,\r\n                j,\r\n                src: i === 10 && j === 10,\r\n                dest: i === 10 && j === 40\r\n            }\r\n            row.push(currentCell);\r\n        }\r\n        board.push(row);\r\n    }\r\n\r\n    // start cell have value 0\r\n    // board[0][2] = 0\r\n\r\n    // destination cell have value 2\r\n    // board[16][45] = 2\r\n\r\n    return (\r\n        <div>\r\n            <button className='btn btn-primary'>Visualize</button>\r\n            <table>\r\n                {board.map(row => \r\n                    <tr>{row.map(cell => <Cell {...cell} />)}</tr>\r\n                )}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid","import React from 'react'\r\nimport Grid from './Grid'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Graph() {\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <h1>Path finding Algorithm visualizer</h1>\r\n            <Link className='btn btn-lg' to='/'>Home</Link>\r\n            <Grid />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph","const obCompare = (ob1, ob2) => ob1.row === ob2.row && ob1.col === ob2.col\r\nconst isSafe = (x, y) => x >=0 && x < 5 && y >= 0 && y < 5\r\n\r\nconst BFS = (grid, src, dest) => {\r\n    const d = [ { row: 1, col: 0 }, { row: 0, col: 1 }, { row: -1, col: 0 }, { row: 0, col: -1 } ]\r\n    let q = []\r\n\r\n    q.push(src);\r\n    grid[src.row][src.col].visited = true;\r\n\r\n    while(q.length) {\r\n        src = q.pop();\r\n\r\n        if(obCompare(src, dest)) return true\r\n\r\n        for(let i=0; i<4; i++) {\r\n            const newDir = { row: src.row + d[i].row, col: src.col + d[i].col }\r\n            if(isSafe(newDir.row, newDir.col) && !grid[newDir.row][newDir.col].visited && grid[newDir.row][newDir.col].safeToVisit) {\r\n                grid[newDir.row][newDir.col].visited = true;\r\n                q.push(newDir);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport default BFS","import React from 'react'\r\n\r\nfunction TestCell({ x, y, visited, isStartingPoint, isFinishPoint }) {\r\n    let ClassName;\r\n\r\n    if(visited) {\r\n        ClassName = 'bg-success'\r\n    } else if(isFinishPoint) {\r\n        ClassName = 'bg-danger'\r\n    } else if(isStartingPoint) {\r\n        ClassName = 'bg-secondary'\r\n    } else {\r\n        ClassName = 'bg-primary'\r\n    }\r\n\r\n    return (\r\n        <td \r\n            className={`w-50 h-50 ${ClassName}`}\r\n            style={{ border: '1px solid black' }}\r\n            id={`cell-${x}-${y}`}\r\n        >{x}-{y}</td>\r\n    )\r\n}\r\n\r\nexport default TestCell","import React, { useState, useEffect } from 'react'\r\nimport BFS from './BFS'\r\nimport TestCell from './TestCell'\r\n\r\n// WHAT DOES ONE CELL HAVE\r\n\r\n// 1 1 1 1 1\r\n// 1 1 1 1 1\r\n// 1 1 1 1 1\r\n// 1 1 1 1 1\r\n// 1 1 1 1 1\r\n\r\n// ONE CELL MUST HAVE -\r\n// 1. BOOLEAN TO KNOW IF IT THE STARTING POINT\r\n// 2. BOOLEAN TO KNOW IF IT THE ENDING POINT\r\n// 3. WEIGHT\r\n\r\nfunction Test() {\r\n    const ROWS = 5\r\n    const COLS = 5\r\n    const START_ROW = 0\r\n    const START_COL = 0\r\n    const END_ROW = 4\r\n    const END_COL = 4\r\n\r\n    const getGrid = (ROWS, COLS) => {\r\n        let grid = []\r\n\r\n        for(let i=0; i<ROWS; i++) {\r\n            let row = []\r\n            for(let j=0; j<COLS; j++) {\r\n                const ob = { \r\n                    x: i,\r\n                    y: j,\r\n                    from: {x: -1, y: -1},\r\n                    visited: false,\r\n                    isStartingPoint: false,\r\n                    isFinishPoint: false,\r\n                    safeToVisit: true\r\n                }\r\n                row.push(ob);\r\n            }\r\n            grid.push(row);\r\n        }\r\n\r\n        grid[START_ROW][START_ROW].isStartingPoint = true;\r\n        grid[END_ROW][END_ROW].isFinishPoint = true;\r\n\r\n        // grid[3][2].safeToVisit = false\r\n        // grid[3][3].safeToVisit = false\r\n        // grid[3][4].safeToVisit = false\r\n        grid[4][3].safeToVisit = false\r\n\r\n        return grid;\r\n    }\r\n\r\n    const [grid, setGrid] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setGrid(getGrid(ROWS, COLS));\r\n    }, [])\r\n\r\n    const handleFindPath = () => {\r\n        let src = { row: START_ROW, col: START_COL }\r\n        const dest = { row: END_ROW, col: END_COL }\r\n\r\n        //IMPLEMENT BFS\r\n        console.log(BFS(grid, src, dest))\r\n\r\n        // let q = {row: 3, col: 3}\r\n\r\n        // setGrid(getGrid(ROWS, COLS));\r\n    }\r\n\r\n    return (\r\n        <div className='dark-mode'>\r\n            <div className='d-flex justify-content-center'>\r\n                <table>\r\n                    <tbody>\r\n                        {grid.map((row, i) => <tr key={i}>{row.map((cell, j) => <TestCell key={`${i}-${j}`}  {...cell} />)}</tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <button className='btn btn-secondary' onClick={handleFindPath}>Find Path</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test","import React from 'react'\r\nimport './Cell.css'\r\n\r\nfunction Cell({ row, col, visited, isStartingPoint, isFinishPoint, safeToVisit, toggleCell }) {\r\n    let classToAdd;\r\n\r\n    if(isStartingPoint) classToAdd = 'node node-start'\r\n    else if(isFinishPoint) classToAdd = 'node node-finish'\r\n    else classToAdd = 'node node-unvisited'\r\n    \r\n    return (\r\n        <td\r\n            id={`node-${row}-${col}`}\r\n            className={classToAdd}\r\n            style={{ border: '1px solid black' }}\r\n            onClick={() => toggleCell(row, col)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Cell","import React, { useState, useEffect } from 'react'\r\nimport Cell from './Cell'\r\n\r\n//WHAT DOES ONE CELL HAVE\r\n// 1. VISITED?\r\n// 2. START POINT?\r\n// 3. END POINT?\r\n// 4. SAFE TO GO?\r\n\r\nfunction TestColoring() {\r\n    const SRC = {x: 9, y: 15};\r\n    const DEST = {x: 9, y: 30};\r\n    const M = 20\r\n    const N = 50\r\n    \r\n    const [grid, setGrid] = useState([])\r\n\r\n    useEffect(() => {\r\n        setGrid(getGrid())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    \r\n    const obComp = (ob1, ob2) => ob1.x === ob2.x && ob2.y === ob1.y\r\n\r\n    const getGrid = () => {\r\n        let GRID = []\r\n            \r\n        for(let i=0; i<M; i++) {\r\n            let row = []\r\n            for(let j=0; j<N; j++) {\r\n                row.push({\r\n                    row: i,\r\n                    col: j,\r\n                    visited: false,\r\n                    isStartingPoint: false,\r\n                    isFinishPoint: false,\r\n                    safeToVisit: true,\r\n                    from: {x: -1, y: -1},\r\n                })\r\n            }\r\n            GRID.push(row)\r\n        }\r\n    \r\n        GRID[SRC.x][SRC.y].isStartingPoint = true\r\n        GRID[DEST.x][DEST.y].isFinishPoint = true\r\n\r\n        return GRID\r\n    }\r\n\r\n    const clearBoard = () => {\r\n        setGrid(getGrid())\r\n        for(let i=0; i<M; i++) {\r\n            for(let j=0; j<N; j++) {\r\n                document.getElementById(`node-${i}-${j}`).className = 'node node-unvisited'\r\n            }\r\n        }\r\n    }\r\n\r\n    const isSafe = ({x, y}) => x >=0 && x < M && y >= 0 && y < N\r\n\r\n    const handleChangeAdjacentColor = src => {\r\n        const d = [ { x: -1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 0 }, { x: 0, y: -1 } ]\r\n\r\n        let a = []\r\n        let q = [src]\r\n        grid[src.x][src.y].visited = true\r\n        let path\r\n\r\n        while(q.length) {\r\n            const src = q.shift()\r\n\r\n            if(obComp(src, DEST)) {\r\n                // console.log(grid)\r\n                path = getPath()\r\n                break\r\n            }\r\n\r\n            d.forEach(dir => {\r\n                const newDir = { x: src.x+dir.x, y: src.y+dir.y }\r\n                if(isSafe(newDir) && !grid[newDir.x][newDir.y].visited && grid[newDir.x][newDir.y].safeToVisit) {\r\n                    a.push(newDir)\r\n                    q.push(newDir)\r\n                    grid[newDir.x][newDir.y].from = src\r\n                    grid[newDir.x][newDir.y].visited = true\r\n                }\r\n            })\r\n        }\r\n        \r\n        // console.log(a)\r\n\r\n        for(let i=0; i<=a.length; i++) {\r\n            if(i === a.length) {\r\n                setTimeout(() => {\r\n                    for(let j=0; j<path.length; j++) {\r\n                        setTimeout(() => {\r\n                            document.getElementById(`node-${path[j].x}-${path[j].y}`).className = 'node node-backtrack'\r\n                        }, j * 100)\r\n                    }\r\n                }, i * 5);\r\n            } else {\r\n                setTimeout(() => {\r\n                    document.getElementById(`node-${a[i].x}-${a[i].y}`).className = 'node node-visited'\r\n                }, i * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPath = () => {\r\n        let path = []\r\n        let fromCell = grid[DEST.x][DEST.y].from\r\n        while(!obComp(fromCell, SRC)) {\r\n            path.push(fromCell);\r\n            fromCell = grid[fromCell.x][fromCell.y].from\r\n        }\r\n\r\n        console.log(path)\r\n        return path\r\n    }\r\n\r\n    const toggleCell = (r, c) => {\r\n        let newGrid = [...grid]\r\n        newGrid[r][c].safeToVisit = false;\r\n        document.getElementById(`node-${r}-${c}`).className = 'node node-unsafe'\r\n        setGrid(newGrid);\r\n    }\r\n\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <table>\r\n                <tbody>\r\n                    {grid.map((row, i) => \r\n                    <tr key={i}>\r\n                        {row.map((cell, j) => <Cell key={`${i}-${j}`} toggleCell={toggleCell} {...cell} />)}\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n            <button className='btn btn-secondary' onClick={() => handleChangeAdjacentColor(SRC)}>Color Adjacent</button>\r\n            <button className='btn btn-default' onClick={clearBoard}>Clear Board</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestColoring","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport Graph from './components/Graph/Graph';\nimport Test from './components/Test/Test';\nimport TestColoring from './components/TestColoring/TestColoring';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/graphs' component={Graph} />\n      <Route exact path='/test' component={Test} />\n      <Route exact path='/test-coloring' component={TestColoring} />\n    </Switch>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}