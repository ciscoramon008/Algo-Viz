{"version":3,"sources":["components/HomePage.js","components/PathFindingAlgo/Cell.js","components/PathFindingAlgo/Algorithms/BFS.js","components/PathFindingAlgo/PathFindingAlgo.js","App.js","index.js"],"names":["HomePage","className","style","height","to","Cell","classToAdd","row","col","isStartingPoint","visited","isFinishPoint","handleMouseDown","safeToVisit","toggleCell","handleMouseOver","handleMouseUp","id","border","onMouseDown","onMouseOver","onMouseUp","obComp","ob1","ob2","x","y","d","isSafe","getPath","grid","src","dest","path","from","push","BFS","start","end","a","q","length","shift","dir","newDir","isPathFound","nodesVisited","DEST","PathFindingAlgo","useState","setGrid","source","setSource","mousePressed","setMousePressed","useEffect","getGrid","GRID","i","j","r","c","newGrid","document","getElementById","map","key","cell","onClick","pop","String","setTimeout","App","exact","component","TestColoring","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e7b48eb3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <h1 className='text-white'>WELCOME TO ALGO-VIZ</h1>\r\n            <p className='font-size-22'>Visulize core algorithms used in all over the programming world.</p>\r\n            <Link className='btn btn-success btn-lg' to='/path-finding-visualization'>Path Finding visualization</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport './Cell.css'\r\n\r\nfunction Cell({ row, col, visited, isStartingPoint, isFinishPoint, safeToVisit, toggleCell, handleMouseDown, handleMouseOver, handleMouseUp }) {\r\n    let classToAdd;\r\n\r\n    if(isStartingPoint) classToAdd = 'node node-start'\r\n    else if(isFinishPoint) classToAdd = 'node node-finish'\r\n    else classToAdd = 'node node-unvisited'\r\n    \r\n    return (\r\n        <td\r\n            id={`node-${row}-${col}`}\r\n            className={classToAdd}\r\n            style={{ border: '1px solid black' }}\r\n            // onClick={() => toggleCell(row, col)}\r\n            onMouseDown={() => handleMouseDown(row, col)}\r\n            onMouseOver={() => handleMouseOver(row, col)}\r\n            onMouseUp={() => handleMouseUp(row, col)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Cell","const obComp = (ob1, ob2) => ob1.x === ob2.x && ob2.y === ob1.y\r\nconst d = [ { x: 0, y: 1 }, { x: -1, y: 0 }, { x: 1, y: 0 }, { x: 0, y: -1 } ]\r\nconst isSafe = ({x, y}) => x >=0 && x < 20 && y >= 0 && y < 50\r\n\r\nconst BFS = (grid, start, end) => {\r\n    let a = []\r\n    // let path = []\r\n    let q = [start]\r\n    grid[start.x][start.y].visited = true\r\n\r\n    while(q.length) {\r\n        const src = q.shift()\r\n\r\n        for(const dir of d) {\r\n            const newDir = { x: src.x+dir.x, y: src.y+dir.y }\r\n            if(obComp(newDir, end)) {\r\n                grid[end.x][end.y].from = src;\r\n                return { isPathFound: true, nodesVisited: a, path: getPath(grid, start, end) }\r\n            }\r\n            if(isSafe(newDir) && !grid[newDir.x][newDir.y].visited && grid[newDir.x][newDir.y].safeToVisit) {\r\n                a.push(newDir)\r\n                q.push(newDir)\r\n                grid[newDir.x][newDir.y].from = src\r\n                grid[newDir.x][newDir.y].visited = true\r\n            }\r\n        }\r\n    }\r\n\r\n    return { isPathFound: false, nodesVisited: a, path: [] }\r\n}\r\n\r\nconst getPath = (grid, src, dest) => {\r\n    let path = []\r\n\r\n    while(!obComp(grid[dest.x][dest.y].from, {x: -1, y: -1})) {\r\n        path.push(grid[dest.x][dest.y].from);\r\n        dest = grid[dest.x][dest.y].from;\r\n    }\r\n\r\n    return path;\r\n}\r\n\r\n\r\nexport default BFS","import React, { useState, useEffect } from 'react'\r\nimport Cell from './Cell'\r\nimport BFS from './Algorithms/BFS';\r\n\r\n// const SRC = {x: 9, y: 5};\r\nconst DEST = {x: 9, y: 45};\r\nconst M = 20\r\nconst N = 50\r\n\r\nconst PathFindingAlgo = () => {\r\n    const [grid, setGrid] = useState([])\r\n    const [source, setSource] = useState({ x: 9, y: 5 })\r\n    const [mousePressed, setMousePressed] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setGrid(getGrid())\r\n    }, [])\r\n    \r\n    const getGrid = () => {\r\n        let GRID = []\r\n            \r\n        for(let i=0; i<M; i++) {\r\n            let row = []\r\n            for(let j=0; j<N; j++) {\r\n                row.push({\r\n                    row: i,\r\n                    col: j,\r\n                    visited: false,\r\n                    isStartingPoint: false,\r\n                    isFinishPoint: false,\r\n                    safeToVisit: true,\r\n                    from: {x: -1, y: -1},\r\n                })\r\n            }\r\n            GRID.push(row)\r\n        }\r\n    \r\n        GRID[source.x][source.y].isStartingPoint = true\r\n        GRID[DEST.x][DEST.y].isFinishPoint = true\r\n\r\n        return GRID\r\n    }\r\n\r\n    // const clearBoard = () => {\r\n    //     setGrid(getGrid())\r\n    //     for(let i=0; i<M; i++) {\r\n    //         for(let j=0; j<N; j++) {\r\n    //             document.getElementById(`node-${i}-${j}`).className = 'node node-unvisited'\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    const handleChangeAdjacentColor = () => {\r\n        const { nodesVisited, path } = BFS(grid, source, DEST)\r\n        // console.log(BFS(grid, SRC, DEST))\r\n        // console.log(path)\r\n        path.pop()\r\n\r\n        for(const i in nodesVisited) {\r\n            if(i === String(nodesVisited.length-1) && path.length) {\r\n                setTimeout(() => {\r\n                    for(const j in path) {\r\n                        setTimeout(() => {\r\n                            document.getElementById(`node-${path[j].x}-${path[j].y}`).className = 'node node-backtrack'\r\n                        }, j * 50);\r\n                    }\r\n                }, i * 5);\r\n            } else {\r\n                setTimeout(() => {\r\n                    document.getElementById(`node-${nodesVisited[i].x}-${nodesVisited[i].y}`).className = 'node node-visited'\r\n                }, i * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMouseDown = (r, c) => {\r\n        // let newGrid = [...grid];\r\n        // newGrid[source.x][source.y].isStartingPoint = false;\r\n        // newGrid[r][c].isStartingPoint = true;\r\n        // document.getElementById(`node-${source.x}-${source.y}`).className = 'node node-unvisited'\r\n        // document.getElementById(`node-${r}-${c}`).className = 'node node-start'\r\n        // setGrid(newGrid);\r\n        // setSource({x: r, y: c});\r\n        if(!mousePressed) {\r\n            setMousePressed(true);\r\n        }\r\n    }\r\n\r\n    const handleMouseUp = (r, c) => {\r\n        let newGrid = [...grid];\r\n        // newGrid[source.x][source.y].isStartingPoint = false;\r\n        newGrid[r][c].isStartingPoint = true;\r\n        // document.getElementById(`node-${source.x}-${source.y}`).className = 'node node-unvisited'\r\n        document.getElementById(`node-${r}-${c}`).className = 'node node-start'\r\n        setGrid(newGrid);\r\n        setSource({x: r, y: c});\r\n        setMousePressed(false);\r\n    }\r\n\r\n    const handleMouseOver = (r, c) => {\r\n        if(mousePressed) {\r\n            // document.getElementById(`node-${source.x}-${source.y}`).className = 'node node-unvisited'\r\n            document.getElementById(`node-${r}-${c}`).className = 'node node-start'\r\n            // setSource({ x: r, y: c })\r\n        }\r\n    }\r\n\r\n\r\n    const toggleCell = (r, c) => {\r\n        // let newGrid = [...grid]\r\n        // newGrid[r][c].safeToVisit = false;\r\n        // document.getElementById(`node-${r}-${c}`).className = 'node node-unsafe'\r\n        // setGrid(newGrid);\r\n    }\r\n\r\n    return (\r\n        <div className='dark-mode' style={{ height: '100vh' }}>\r\n            <table>\r\n                <tbody>\r\n                    {grid.map((row, i) => \r\n                    <tr key={i}>\r\n                        {row.map((cell, j) => <Cell\r\n                            key={`${i}-${j}`}\r\n                            toggleCell={toggleCell}\r\n                            handleMouseDown={handleMouseDown}\r\n                            handleMouseOver={handleMouseOver}\r\n                            handleMouseUp={handleMouseUp}\r\n                            {...cell} \r\n                        />)}\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n            <button className='btn btn-secondary' onClick={handleChangeAdjacentColor}>Color Adjacent</button>\r\n            {/* <button className='btn btn-default' onClick={clearBoard}>Clear Board</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathFindingAlgo","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport TestColoring from './components/PathFindingAlgo/PathFindingAlgo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/path-finding-visualization' component={TestColoring} />\n    </Switch>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}